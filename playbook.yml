---
- hosts: localhost
  remote_user: root
  vars:
    targetEnvironment: '{{ env }}'
    home: '{{ ansible_env.HOME }}'
    gitRepos: '{{ home }}/git-repos'
    nginxCerts: '/etc/nginx/certs'
    nginxSitesLinux: '/etc/nginx/sites-enabled'
    nginxSitesMac: '/usr/local/etc/nginx/sites-enabled'
    nginxSites: '{{ nginxSitesMac }}'
    # nginxSites: '{{ nginxSitesLinux }}'
    nginxWWW: '/usr/share/nginx/www'
    nginxWWWLocal: '/usr/local/share/nginx/www'
    hostsFile: /etc/hosts
    environments:
      - hop
      - fib
      - tes
      - tur
      - dev
      - gang
      - demo
      - int
      - prod
    projectRoots:
      webDashboard: '{{ gitRepos }}/web-dashboard'
      webAttendee: '{{ gitRepos }}/web-attendee'
      webWidgets: '{{ gitRepos }}/web-widgets'
      webOrganizer: '{{ gitRepos }}/web-organizer'
      webRealtime: '{{ gitRepos }}/web-realtime'
    certsDirectories:
      - '{{ nginxCerts }}/hop'
      - '{{ nginxCerts }}/fib'
      - '{{ nginxCerts }}/tes'
      - '{{ nginxCerts }}/tur'
      - '{{ nginxCerts }}/dev'
      - '{{ nginxCerts }}/gang'
      - '{{ nginxCerts }}/demo'
      - '{{ nginxCerts }}/qa'
      - '{{ nginxCerts }}/prod'
    wwwDirectories:
      - '{{ nginxWWWLocal }}/hop'
      - '{{ nginxWWWLocal }}/fib'
      - '{{ nginxWWWLocal }}/tes'
      - '{{ nginxWWWLocal }}/tur'
      - '{{ nginxWWWLocal }}/dev'
      - '{{ nginxWWWLocal }}/gang'
      - '{{ nginxWWWLocal }}/demo'

  tasks:
    - name: Create WWW Directories
      become: true
      file:
        path: '{{ item }}'
        state: directory
      with_items: '{{ wwwDirectories }}'

    - name: Create Certificates Directories
      become: true
      file:
        path: '{{ item }}'
        state: directory
      with_items: '{{ certsDirectories }}'

    # --------

    - name: Check for Web-Realtime
      stat:
        path: '{{ projectRoots.webRealtime }}'
      register: webRealtimeStat

    - name: Web-Realtime
      become: true
      include_role:
        name: webRealtime
      when: webRealtimeStat.stat.isdir is defined and webRealtimeStat.stat.isdir 

    # --------

    - name: Check for Web-Attendee
      stat:
        path: '{{ projectRoots.webAttendee }}'
      register: webAttendeeStat

    - name: Web-Attendee
      become: true
      include_role:
        name: webAttendee
      when: webAttendeeStat.stat.isdir is defined and webAttendeeStat.stat.isdir 

    # --------

    - name: Check for Web-Dashboard
      stat:
        path: '{{ projectRoots.webDashboard }}'
      register: webDashboardStat

    - name: Web-Dashboard
      become: true
      include_role:
        name: webDashboard
      when: webDashboardStat.stat.isdir is defined and webDashboardStat.stat.isdir 

    # --------

    - name: Check for Web-Widgets
      stat:
        path: '{{ projectRoots.webWidgets }}'
      register: webWidgetsStat

    - name: Web-Widgets
      become: true
      include_role:
        name: webWidgets
      when: webWidgetsStat.stat.isdir is defined and webWidgetsStat.stat.isdir 

    # --------

    - name: Check for Web-Organizer
      stat:
        path: '{{ projectRoots.webOrganizer }}'
      register: webOrganizerStat

    - name: Web-Organizer
      become: true
      include_role:
        name: webOrganizer
      when: webOrganizerStat.stat.isdir is defined and webOrganizerStat.stat.isdir 

    # --------

    - name: Restart NGINX
      become: true
      service:
        name: nginx
        state: restarted